name: Release
on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  REGISTRY: ghcr.io/sovereigncloudstack
  metadata_flavor: latest=true
  metadata_tags: type=ref,event=tag
permissions:
  contents: write
  packages: write
  # Required to generate OIDC tokens for `sigstore/cosign-installer` authentication
  id-token: write
jobs:
  manager-image:
    name: Build and push manager image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-go
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

      - name: Generate metadata cspo
        id: metacspo
        uses: ./.github/actions/metadata
        env:
          IMAGE_NAME: cspo
        with:
          metadata_flavor: ${{ env.metadata_flavor }}
          metadata_tags: ${{ env.metadata_tags }}

      - name: Login to ghcr.io for CI
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0

      - name: Install Bom
        shell: bash
        run: |
          curl -L https://github.com/kubernetes-sigs/bom/releases/download/v0.6.0/bom-amd64-linux -o bom
          sudo mv ./bom /usr/local/bin/bom
          sudo chmod +x /usr/local/bin/bom

      - name: Setup Env
        run: |
          echo 'DOCKER_BUILD_LDFLAGS<<EOF' >> $GITHUB_ENV
          echo $DOCKER_BUILD_LDFLAGS >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Build and push cspo image
        uses: docker/build-push-action@16ebe778df0e7752d2cfcbd924afdbbd89c1a755 # v6
        id: docker_build_release_cspo
        with:
          provenance: false
          context: .
          file: ./images/cspo/Dockerfile
          push: true
          build-args: |
            LDFLAGS=${{ env.DOCKER_BUILD_LDFLAGS }}
          tags: ${{ steps.metacspo.outputs.tags }}
          labels: ${{ steps.metacspo.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, mode=max, scope=${{ github.workflow }}


      - name: Sign Container Images
        run: |
          cosign sign --yes ghcr.io/sovereigncloudstack/cspo@${{ steps.docker_build_release_cspo.outputs.digest }}

      - name: Generate SBOM cspo
        shell: bash
        # To-Do: generate SBOM from source after https://github.com/kubernetes-sigs/bom/issues/202 is fixed
        run: |
          bom generate --format=json -o sbom_ci_main_cspo_${{ steps.metacspo.outputs.version }}-spdx.json \
          --image=ghcr.io/sovereigncloudstack/cspo:${{ steps.metacspo.outputs.version }}

      - name: Attest SBOM to Container Images cspo
        run: |
          cosign attest --yes --type=spdxjson --predicate sbom_ci_main_cspo_${{ steps.metacspo.outputs.version }}-spdx.json ghcr.io/sovereigncloudstack/cspo@${{ steps.docker_build_release_cspo.outputs.digest }}

      - name: Sign SBOM Images cspo
        run: |
          docker_build_release_digest="${{ steps.docker_build_release_cspo.outputs.digest }}"
          image_name="ghcr.io/sovereigncloudstack/cspo:${docker_build_release_digest/:/-}.sbom"
          docker_build_release_sbom_digest="sha256:$(docker buildx imagetools inspect --raw ${image_name} | sha256sum | head -c 64)"
          cosign sign --yes "ghcr.io/sovereigncloudstack/cspo@${docker_build_release_sbom_digest}"

      - name: Image Releases digests cspo
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "ghcr.io/sovereigncloudstack/cspo:{{ steps.metacspo.outputs.version }}@${{ steps.docker_build_release_cspo.outputs.digest }}" >> image-digest/cspo.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: image-digest cspo
          path: image-digest
          retention-days: 90

      - name: Image Digests Output
        shell: bash
        run: |
          cd image-digest/
          find -type f | sort | xargs -d '\n' cat

  release:
    name: Create draft release
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: write
    defaults:
      run:
        shell: bash
    needs:
      - manager-image
    steps:
      - name: Set env
        shell: bash
        run: echo "RELEASE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV

      - name: checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0

      - name: Install go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: "go.mod"
          cache: true
          cache-dependency-path: go.sum

      - name: install kustomize
        run: |
          make kustomize

      - name: generate release artifacts
        run: |
          make release

      - name: generate release notes
        run: |
          make release-notes

      - name: Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
        with:
          draft: true
          files: out/*
          body_path: _releasenotes/${{ env.RELEASE_TAG }}.md
